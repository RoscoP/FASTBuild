{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "FASTBuild",
    "foldingStartMarker": "/\\*\\*(?!\\*)|^(?![^{]*?//|[^{]*?/\\*(?!.*?\\*/.*?\\{)).*?\\{\\s*($|//|/\\*(?!.*?\\*/.*\\S))",
    "foldingStopMarker": "(?<!\\*)\\*\\*/|^\\s*\\}",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#strings_single"
        },
        {
            "include": "#strings_double"
        },
        {
            "include": "#fastbuild_defines"
        },
        {
            "include": "#directives"
        },
        {
            "include": "#directive_functions"
        },
        {
            "include": "#import_env_variable"
        },
        {
            "include": "#defined_variables"
        },
        {
            "include": "#local_variables"
        },
        {
            "include": "#comment"
        }
    ],
    "repository": {
        "string_highlight": {
            "patterns": [{
                "name": "constant.character.escape.fastbuild",
                "match": "\\^.|\\$[\\w\\d]+\\$|%\\d+"
            }]
        },
        "keywords": {
            "patterns": [{
                "name": "keyword.operator.fastbuild",
                "match": "[\\+\\-=]"
            }]
        },
        "functions": {
            "patterns": [{
                "name": "support.function.fastbuild",
                "match": "\\b(Alias|Compiler|Copy|CopyDir|CSAssembly|DLL|Exec|Executable|ForEach|If|Library|ListDependencies|ObjectList|Print|RemoveDir|Settings|Test|TextFile|Unity|Using|VCXProject|VSProjectExternal|VSSolution|XCodeProject)\\b"
            }]
        },
        "constants": {
            "patterns": [{
                "name": "constant.language.fastbuild",
                "match": "\\b(true|false)\\b"
            }]
        },
        "strings_single": {
            "name": "string.quoted.single.fastbuild",
            "begin": "'",
            "end": "'",
            "patterns": [{
                "include": "#string_highlight"
            }]
        },
        "strings_double": {
            "name": "string.quoted.double.fastbuild",
            "begin": "\"",
            "end": "\"",
            "patterns": [{
                "include": "#string_highlight"
            }]
        },
        "fastbuild_defines": {
            "patterns": [{
                "name": "variable.language.fastbuild",
                "match": "__WINDOWS__|__OSX__|__LINUX__|_CURRENT_BFF_DIR_|_FASTBUILD_VERSION_STRING_|_FASTBUILD_VERSION_|_WORKING_DIR_"
            }]
        },
        "directives": {
            "patterns": [{
                "name": "keyword.other.fastbuild",
                "match": "(#)(undef|if|else|endif|include|once)",
                "captures": {
                    "0": {
                        "name": "meta.preprocessor.fastbuild"
                    }
                }
            }]
        },
        "directive_functions": {
            "patterns": [{
                "name": "keyword.function.fastbuild",
                "match": "\\b(exists|file_exists|in)\\b"
            }]
        },
        "import_env_variable": {
            "patterns": [{
                "name": "keyword.other.fastbuild",
                "match": "#import\\s+([\\w\\d]+)",
                "captures": {
                    "1": {
                        "name": "meta.parameter.type.variable.fastbuild"
                    }
                }
            }]
        },
        "defined_variables": {
            "patterns": [{
                "name": "keyword.other.fastbuild",
                "match": "#define\\s+([\\w\\d]+)",
                "captures": {
                    "1": {
                        "name": "meta.parameter.type.variable.fastbuild"
                    }
                }
            }]
        },
        "local_variables": {
            "patterns": [{
                "match": "(\\b)?[\\.^]([\\w\\d\\$]+)\\b",
                "captures": {
                    "2": {
                        "name": "variable.other.fastbuild"
                    }
                }
            }, {
                "match": "(\\b)?[\\.^]['\"](.+)['\"]\\b",
                "captures": {
                    "2": {
                        "name": "variable.other.fastbuild"
                    }
                }
            }]
        },
        "comment": {
            "patterns": [{
                "name": "comment.line.double-slash.fastbuild",
                "match": "(//|;).*"
            }]
        }
    },
    "scopeName": "source.fastbuild"
}
